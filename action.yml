# SPDX-FileCopyrightText: 2022 Jakob Fritz <j.fritz@fz-juelich.de>
#
# SPDX-License-Identifier: CC0-1.0

name: 'Github2lab'
description: 'Mirroring a repo to gitlab to use the gitlab-ci'
inputs:
  GITLAB_TOKEN:  # id of input
    description: 'set to "secrets.GITLAB_TOKEN"'
    required: true
    default: 'World'
  FORCE_PUSH:  # id of input
    description: 'Defaults to true, set to false if no force-push to gitlab shall be done'
    required: false
    default: "true"
  GITLAB_HOSTNAME:  # id of input
    description: 'The hostname of the gitlab-instance (without https://)'
    required: true
    default: 'codebase.helmholtz.cloud'
  GITLAB_PROJECT_ID:  # id of input
    description: 'The ID of your project in Gitlab'
    required: true
    default: '1234'
  GITHUB_TOKEN:  # id of input
    description: 'The token to authorize to the GITHUB-API (set to secrets.GITHUB_TOKEN)'
    required: true
runs:
  using: "composite"
  steps:
    - run: sh ./mirror.sh
      shell: bash
      env:
        # GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
        GITLAB_TOKEN: ${{ inputs.GITLAB_TOKEN }}
        FORCE_PUSH: ${{ inputs.FORCE_PUSH }}
        GITLAB_HOSTNAME: ${{ inputs.GITLAB_HOSTNAME }}
        GITLAB_PROJECT_ID: ${{ inputs.GITLAB_PROJECT_ID }}
    - run: sh ./get_ci_state.sh
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
        GITLAB_TOKEN: ${{ inputs.GITLAB_TOKEN }}
        # FORCE_PUSH: ${{ inputs.FORCE_PUSH }}
        GITLAB_HOSTNAME: ${{ inputs.GITLAB_HOSTNAME }}
        GITLAB_PROJECT_ID: ${{ inputs.GITLAB_PROJECT_ID }}