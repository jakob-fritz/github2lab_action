# SPDX-FileCopyrightText: 2022 Jakob Fritz <j.fritz@fz-juelich.de>
#
# SPDX-License-Identifier: MIT

Testing params:
  stage: test
  script:
    - echo "Hello World"
    - echo "$CI_COMMIT_SHA"
    - echo "$CI_COMMIT_BRANCH"
    - echo "$CI_MERGE_REQUEST_IID"

Failing test:
  stage: test
  script:
    - exit 1

Returning success-status to Github:
  stage: .post
  when: on_success
  image: curlimages/curl:7.86
  script:
    # - >
    #   curl -d "{state:success, target_url: ${CI_PIPELINE_URL}, context: gitlab-ci}" -H "Authorization: token ${GITHUB_TOKEN}" -H "Accept: application/vnd.github+json" -X POST --silent "https://api.github.com/repos/${GITHUB_REPOSITORY}/statuses/${CI_COMMIT_SHA}"
    - >
      curl -d '{"state":"success", "target_url": "'"${CI_PIPELINE_URL}"'", "context": "gitlab-ci"}' -H "Authorization:token ${GITHUB_TOKEN}" -H "Accept:application/vnd.github+json" -X POST --silent "https://api.github.com/repos/${GITHUB_REPOSITORY}/statuses/${CI_COMMIT_SHA}"

Returning failure-status to Github:
  stage: .post
  when: on_failure
  image: curlimages/curl:7.86
  script:
    - >
      curl -d '{"state":"failure", "target_url": "'"${CI_PIPELINE_URL}"'", "context": "gitlab-ci"}' -H "Authorization:token ${GITHUB_TOKEN}" -H "Accept:application/vnd.github+json" -X POST --silent "https://api.github.com/repos/${GITHUB_REPOSITORY}/statuses/${CI_COMMIT_SHA}"

